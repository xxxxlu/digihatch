{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport ProductCard from '@/components/product/ProductCard.vue';\nexport default {\n  name: 'ProductDetail',\n  components: {\n    ProductCard\n  },\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      currentImage: '',\n      quantity: 1,\n      loading: true\n    };\n  },\n  computed: {\n    ...mapGetters(['allProducts', 'productById', 'relatedProducts']),\n    product() {\n      return this.productById(Number(this.id));\n    },\n    getWhatsAppLink() {\n      // 确保只在客户端环境中访问window对象\n      if (typeof window !== 'undefined') {\n        return `https://wa.me/+923070405982?text=Hello, I would like to buy this product: ${this.product.name} ${window.location.href}`;\n      }\n      // 服务器端渲染时返回基本链接\n      return `https://wa.me/+923070405982?text=Hello, I would like to buy this product: ${this.product.name}`;\n    }\n  },\n  methods: {\n    formatPrice(price) {\n      return price.toLocaleString();\n    },\n    decreaseQuantity() {\n      if (this.quantity > 1) {\n        this.quantity--;\n      }\n    },\n    increaseQuantity() {\n      if (this.quantity < this.product.stock) {\n        this.quantity++;\n      }\n    },\n    addToCart() {\n      if (this.product.stock > 0) {\n        this.$store.dispatch('addToCart', {\n          product: this.product,\n          quantity: this.quantity\n        });\n        alert(`${this.product.name} added to cart`);\n      }\n    },\n    buyNow() {\n      if (this.product.stock > 0) {\n        this.$store.dispatch('addToCart', {\n          product: this.product,\n          quantity: this.quantity\n        });\n        this.$router.push('/checkout');\n      }\n    }\n  },\n  watch: {\n    id() {\n      // Reset quantity when product changes\n      this.quantity = 1;\n\n      // Set current image to first image\n      if (this.product && this.product.images.length > 0) {\n        this.currentImage = this.product.images[0];\n      }\n    }\n  },\n  created() {\n    this.$store.dispatch('loadProducts').then(() => {\n      if (this.product && this.product.images.length > 0) {\n        this.currentImage = this.product.images[0];\n      }\n      this.loading = false;\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}