{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\n\n// Import mock product data\nimport productData from './products.js';\nexport default new Vuex.Store({\n  state: {\n    products: [],\n    cart: [],\n    loading: false,\n    checkoutInfo: null\n  },\n  getters: {\n    allProducts: state => state.products,\n    featuredProducts: state => state.products.filter(product => product.featured),\n    relatedProducts: state => productId => state.products.filter(product => product.id !== productId).slice(0, 4),\n    productById: state => id => state.products.find(product => product.id === id),\n    cartItems: state => state.cart,\n    cartTotal: state => {\n      return state.cart.reduce((total, item) => {\n        return total + (item.salePrice || item.price) * item.quantity;\n      }, 0);\n    },\n    cartItemCount: state => state.cart.reduce((count, item) => count + item.quantity, 0),\n    isLoading: state => state.loading\n  },\n  mutations: {\n    SET_PRODUCTS(state, products) {\n      state.products = products;\n    },\n    ADD_TO_CART(state, {\n      product,\n      quantity\n    }) {\n      const existingItem = state.cart.find(item => item.id === product.id);\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        state.cart.push({\n          ...product,\n          quantity\n        });\n      }\n\n      // Save cart to localStorage\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n    },\n    REMOVE_FROM_CART(state, productId) {\n      state.cart = state.cart.filter(item => item.id !== productId);\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n    },\n    UPDATE_CART_ITEM_QUANTITY(state, {\n      productId,\n      quantity\n    }) {\n      const item = state.cart.find(item => item.id === productId);\n      if (item) {\n        item.quantity = quantity;\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      }\n    },\n    CLEAR_CART(state) {\n      state.cart = [];\n      localStorage.removeItem('cart');\n    },\n    SET_LOADING(state, value) {\n      state.loading = value;\n    },\n    LOAD_CART_FROM_STORAGE(state) {\n      const savedCart = localStorage.getItem('cart');\n      if (savedCart) {\n        state.cart = JSON.parse(savedCart);\n      }\n    },\n    SAVE_CHECKOUT_INFO(state, info) {\n      state.checkoutInfo = info;\n      localStorage.setItem('checkoutInfo', JSON.stringify(info));\n    }\n  },\n  actions: {\n    loadProducts({\n      commit\n    }) {\n      commit('SET_LOADING', true);\n\n      // Simulate API call with setTimeout and return a Promise\n      return new Promise(resolve => {\n        setTimeout(() => {\n          commit('SET_PRODUCTS', productData);\n          commit('SET_LOADING', false);\n          resolve();\n        }, 500);\n      });\n    },\n    addToCart({\n      commit\n    }, {\n      product,\n      quantity = 1\n    }) {\n      commit('ADD_TO_CART', {\n        product,\n        quantity\n      });\n    },\n    removeFromCart({\n      commit\n    }, productId) {\n      commit('REMOVE_FROM_CART', productId);\n    },\n    updateCartItemQuantity({\n      commit\n    }, {\n      productId,\n      quantity\n    }) {\n      commit('UPDATE_CART_ITEM_QUANTITY', {\n        productId,\n        quantity\n      });\n    },\n    clearCart({\n      commit\n    }) {\n      commit('CLEAR_CART');\n    },\n    initializeStore({\n      commit\n    }) {\n      commit('LOAD_CART_FROM_STORAGE');\n    },\n    saveCheckoutInfo({\n      commit\n    }, info) {\n      commit('SAVE_CHECKOUT_INFO', info);\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","productData","Store","state","products","cart","loading","checkoutInfo","getters","allProducts","featuredProducts","filter","product","featured","relatedProducts","productId","id","slice","productById","find","cartItems","cartTotal","reduce","total","item","salePrice","price","quantity","cartItemCount","count","isLoading","mutations","SET_PRODUCTS","ADD_TO_CART","existingItem","push","localStorage","setItem","JSON","stringify","REMOVE_FROM_CART","UPDATE_CART_ITEM_QUANTITY","CLEAR_CART","removeItem","SET_LOADING","value","LOAD_CART_FROM_STORAGE","savedCart","getItem","parse","SAVE_CHECKOUT_INFO","info","actions","loadProducts","commit","Promise","resolve","setTimeout","addToCart","removeFromCart","updateCartItemQuantity","clearCart","initializeStore","saveCheckoutInfo"],"sources":["/Users/xiaolu/Desktop/tarspay/电商 2/digihatch/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\n// Import mock product data\nimport productData from './products.js'\n\nexport default new Vuex.Store({\n  state: {\n    products: [],\n    cart: [],\n    loading: false,\n    checkoutInfo: null\n  },\n  getters: {\n    allProducts: state => state.products,\n    featuredProducts: state => state.products.filter(product => product.featured),\n    relatedProducts: state => productId => state.products.filter(product => product.id !== productId).slice(0, 4),\n    productById: state => id => state.products.find(product => product.id === id),\n    cartItems: state => state.cart,\n    cartTotal: state => {\n      return state.cart.reduce((total, item) => {\n        return total + (item.salePrice || item.price) * item.quantity\n      }, 0)\n    },\n    cartItemCount: state => state.cart.reduce((count, item) => count + item.quantity, 0),\n    isLoading: state => state.loading\n  },\n  mutations: {\n    SET_PRODUCTS(state, products) {\n      state.products = products\n    },\n    ADD_TO_CART(state, { product, quantity }) {\n      const existingItem = state.cart.find(item => item.id === product.id)\n\n      if (existingItem) {\n        existingItem.quantity += quantity\n      } else {\n        state.cart.push({\n          ...product,\n          quantity\n        })\n      }\n\n      // Save cart to localStorage\n      localStorage.setItem('cart', JSON.stringify(state.cart))\n    },\n    REMOVE_FROM_CART(state, productId) {\n      state.cart = state.cart.filter(item => item.id !== productId)\n      localStorage.setItem('cart', JSON.stringify(state.cart))\n    },\n    UPDATE_CART_ITEM_QUANTITY(state, { productId, quantity }) {\n      const item = state.cart.find(item => item.id === productId)\n      if (item) {\n        item.quantity = quantity\n        localStorage.setItem('cart', JSON.stringify(state.cart))\n      }\n    },\n    CLEAR_CART(state) {\n      state.cart = []\n      localStorage.removeItem('cart')\n    },\n    SET_LOADING(state, value) {\n      state.loading = value\n    },\n    LOAD_CART_FROM_STORAGE(state) {\n      const savedCart = localStorage.getItem('cart')\n      if (savedCart) {\n        state.cart = JSON.parse(savedCart)\n      }\n    },\n    SAVE_CHECKOUT_INFO(state, info) {\n      state.checkoutInfo = info\n      localStorage.setItem('checkoutInfo', JSON.stringify(info))\n    }\n  },\n  actions: {\n    loadProducts({ commit }) {\n      commit('SET_LOADING', true)\n\n      // Simulate API call with setTimeout and return a Promise\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          commit('SET_PRODUCTS', productData)\n          commit('SET_LOADING', false)\n          resolve()\n        }, 500)\n      })\n    },\n    addToCart({ commit }, { product, quantity = 1 }) {\n      commit('ADD_TO_CART', { product, quantity })\n    },\n    removeFromCart({ commit }, productId) {\n      commit('REMOVE_FROM_CART', productId)\n    },\n    updateCartItemQuantity({ commit }, { productId, quantity }) {\n      commit('UPDATE_CART_ITEM_QUANTITY', { productId, quantity })\n    },\n    clearCart({ commit }) {\n      commit('CLEAR_CART')\n    },\n    initializeStore({ commit }) {\n      commit('LOAD_CART_FROM_STORAGE')\n    },\n    saveCheckoutInfo({ commit }, info) {\n      commit('SAVE_CHECKOUT_INFO', info)\n    }\n  }\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}