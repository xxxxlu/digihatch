{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'Cart',\n  data() {\n    return {\n      couponCode: ''\n    };\n  },\n  computed: {\n    ...mapGetters(['cartItems', 'cartTotal'])\n  },\n  methods: {\n    formatPrice(price) {\n      return price.toLocaleString();\n    },\n    removeItem(productId) {\n      if (confirm('Are you sure you want to remove this item from your cart?')) {\n        this.$store.dispatch('removeFromCart', productId);\n      }\n    },\n    increaseQuantity(item) {\n      if (item.quantity < item.stock) {\n        this.$store.dispatch('updateCartItemQuantity', {\n          productId: item.id,\n          quantity: item.quantity + 1\n        });\n      }\n    },\n    decreaseQuantity(item) {\n      if (item.quantity > 1) {\n        this.$store.dispatch('updateCartItemQuantity', {\n          productId: item.id,\n          quantity: item.quantity - 1\n        });\n      }\n    },\n    updateQuantity(item) {\n      // Ensure quantity is valid\n      let quantity = parseInt(item.quantity);\n      if (isNaN(quantity) || quantity < 1) {\n        quantity = 1;\n      } else if (quantity > item.stock) {\n        quantity = item.stock;\n      }\n      this.$store.dispatch('updateCartItemQuantity', {\n        productId: item.id,\n        quantity\n      });\n    },\n    clearCart() {\n      if (confirm('Are you sure you want to clear your cart?')) {\n        this.$store.dispatch('clearCart');\n      }\n    }\n  },\n  created() {\n    // Initialize the store\n    this.$store.dispatch('initializeStore');\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}